{
  "name": "Lead Automation Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "lead-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Lead Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "lead-generated"
    },
    {
      "parameters": {
        "jsCode": "// Extract lead data from webhook\nconst lead = $input.first().json.lead;\nconst doctor = $input.first().json.doctor;\nconst quizData = $input.first().json.quiz_data;\n\n// Determine communication preferences\nconst shouldSendSMS = lead.phone && doctor?.phone;\nconst shouldSendEmail = lead.email;\nconst shouldNotifyDoctor = doctor?.email || doctor?.phone;\n\n// Set workflow variables\n$vars.set('leadName', lead.name);\n$vars.set('leadEmail', lead.email);\n$vars.set('leadPhone', lead.phone);\n$vars.set('quizType', lead.quiz_type);\n$vars.set('quizScore', lead.score);\n$vars.set('doctorName', doctor?.name || 'Dr. Smith');\n$vars.set('clinicName', doctor?.clinic_name || 'Medical Practice');\n$vars.set('shouldSendSMS', shouldSendSMS);\n$vars.set('shouldSendEmail', shouldSendEmail);\n$vars.set('shouldNotifyDoctor', shouldNotifyDoctor);\n\n// Return data for next nodes\nreturn {\n  lead,\n  doctor,\n  quizData,\n  communicationFlags: {\n    sms: shouldSendSMS,\n    email: shouldSendEmail,\n    doctorNotification: shouldNotifyDoctor\n  }\n};"
      },
      "id": "process-lead-data",
      "name": "Process Lead Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $vars.get('shouldSendSMS') }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "check-sms-flag",
      "name": "Should Send SMS?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $vars.get('shouldSendEmail') }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "check-email-flag",
      "name": "Should Send Email?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 400]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "create",
        "to": "={{ $vars.get('leadPhone') }}",
        "from": "={{ $vars.get('doctorPhone') }}",
        "body": "Hi {{ $vars.get('leadName') }}! Thank you for completing the {{ $vars.get('quizType') }} assessment. Your score: {{ $vars.get('quizScore') }}. {{ $vars.get('doctorName') }} will review your results and contact you within 24 hours. Reply STOP to unsubscribe.",
        "additionalFields": {}
      },
      "id": "send-welcome-sms",
      "name": "Send Welcome SMS",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "resource": "email",
        "operation": "send",
        "to": "={{ $vars.get('leadEmail') }}",
        "subject": "Your {{ $vars.get('quizType') }} Assessment Results - {{ $vars.get('clinicName') }}",
        "html": "<h2>Thank you for completing the {{ $vars.get('quizType') }} assessment!</h2><p>Dear {{ $vars.get('leadName') }},</p><p>We've received your assessment results with a score of <strong>{{ $vars.get('quizScore') }}</strong>.</p><p>{{ $vars.get('doctorName') }} will review your results and contact you within 24 hours to discuss next steps.</p><p>If you have any immediate questions, please don't hesitate to reach out.</p><br><p>Best regards,<br>The {{ $vars.get('clinicName') }} Team</p>",
        "additionalFields": {}
      },
      "id": "send-welcome-email",
      "name": "Send Welcome Email",
      "type": "n8n-nodes-base.sendGrid",
      "typeVersion": 1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $vars.get('shouldNotifyDoctor') }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "check-doctor-notification",
      "name": "Notify Doctor?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 600]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "create",
        "to": "={{ $vars.get('doctorPhone') }}",
        "from": "={{ $vars.get('clinicPhone') }}",
        "body": "NEW LEAD: {{ $vars.get('leadName') }} completed {{ $vars.get('quizType') }} assessment with score {{ $vars.get('quizScore') }}. Contact: {{ $vars.get('leadPhone') }} | {{ $vars.get('leadEmail') }}",
        "additionalFields": {}
      },
      "id": "send-doctor-sms",
      "name": "Send Doctor SMS",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [900, 600]
    },
    {
      "parameters": {
        "resource": "email",
        "operation": "send",
        "to": "={{ $vars.get('doctorEmail') }}",
        "subject": "New Lead: {{ $vars.get('leadName') }} - {{ $vars.get('quizType') }} Assessment",
        "html": "<h2>New Lead Generated</h2><p><strong>Patient Name:</strong> {{ $vars.get('leadName') }}</p><p><strong>Assessment:</strong> {{ $vars.get('quizType') }}</p><p><strong>Score:</strong> {{ $vars.get('quizScore') }}</p><p><strong>Contact Information:</strong></p><ul><li>Phone: {{ $vars.get('leadPhone') }}</li><li>Email: {{ $vars.get('leadEmail') }}</li></ul><p><strong>Submitted:</strong> {{ new Date().toLocaleString() }}</p><br><p>Please contact this patient within 24 hours.</p>",
        "additionalFields": {}
      },
      "id": "send-doctor-email",
      "name": "Send Doctor Email",
      "type": "n8n-nodes-base.sendGrid",
      "typeVersion": 1,
      "position": [900, 800]
    },
    {
      "parameters": {
        "jsCode": "// Log all communication results\nconst results = [];\n\n// Collect SMS results\nif ($input.all()[0]?.json?.success) {\n  results.push('Welcome SMS sent successfully');\n} else {\n  results.push('Welcome SMS failed');\n}\n\n// Collect email results\nif ($input.all()[1]?.json?.success) {\n  results.push('Welcome email sent successfully');\n} else {\n  results.push('Welcome email failed');\n}\n\n// Collect doctor notification results\nif ($input.all()[2]?.json?.success) {\n  results.push('Doctor SMS notification sent');\n} else {\n  results.push('Doctor SMS notification failed');\n}\n\nif ($input.all()[3]?.json?.success) {\n  results.push('Doctor email notification sent');\n} else {\n  results.push('Doctor email notification failed');\n}\n\n// Create summary\nconst summary = {\n  leadId: $vars.get('leadId'),\n  timestamp: new Date().toISOString(),\n  communications: results,\n  totalCommunications: results.length,\n  successfulCommunications: results.filter(r => r.includes('sent')).length\n};\n\nconsole.log('Lead automation completed:', summary);\nreturn summary;"
      },
      "id": "log-results",
      "name": "Log Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "resource": "database",
        "operation": "insert",
        "table": "lead_communications",
        "columns": "lead_id,communication_type,message,status,metadata",
        "values": "={{ $vars.get('leadId') }},automation_complete,{{ JSON.stringify($json) }},completed,{{ JSON.stringify({ workflow: 'n8n-lead-automation', timestamp: new Date().toISOString() }) }}"
      },
      "id": "save-to-database",
      "name": "Save to Database",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1340, 400]
    }
  ],
  "connections": {
    "Lead Webhook": {
      "main": [
        [
          {
            "node": "Process Lead Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Lead Data": {
      "main": [
        [
          {
            "node": "Should Send SMS?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Should Send Email?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Notify Doctor?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Send SMS?": {
      "main": [
        [
          {
            "node": "Send Welcome SMS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Send Email?": {
      "main": [
        [
          {
            "node": "Send Welcome Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Doctor?": {
      "main": [
        [
          {
            "node": "Send Doctor SMS",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Doctor Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Welcome SMS": {
      "main": [
        [
          {
            "node": "Log Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Welcome Email": {
      "main": [
        [
          {
            "node": "Log Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Doctor SMS": {
      "main": [
        [
          {
            "node": "Log Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Doctor Email": {
      "main": [
        [
          {
            "node": "Log Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Results": {
      "main": [
        [
          {
            "node": "Save to Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "lead-automation",
      "name": "Lead Automation"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}
